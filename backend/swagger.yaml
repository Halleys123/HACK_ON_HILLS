openapi: 3.0.0
info:
  title: Hotel Booking API
  description: API documentation for the Hotel Booking system.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
paths:
  # User Routes
  /user/register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [customer, owner]
      responses:
        '201':
          description: User created successfully
        '400':
          description: User not created
  /user/login:
    post:
      summary: Login a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Invalid credentials
  /user/isLoggedIn:
    get:
      summary: Check if the user is logged in
      tags:
        - User
      responses:
        '200':
          description: Authentication successful
        '401':
          description: Access denied
  /user/getMyHotels:
    get:
      summary: Get hotels owned by the logged-in user
      tags:
        - User
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: select
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of hotels
        '404':
          description: No hotels found
  # Hotel Routes
  /hotel:
    get:
      summary: Get all hotels
      tags:
        - Hotel
      parameters:
        - name: ownerId
          in: query
          schema:
            type: string
        - name: city
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
        - name: country
          in: query
          schema:
            type: string
        - name: zipcode
          in: query
          schema:
            type: string
        - name: minRating
          in: query
          schema:
            type: number
        - name: maxRating
          in: query
          schema:
            type: number
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of hotels
    post:
      summary: Create a new hotel
      tags:
        - Hotel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotelName:
                  type: string
                description:
                  type: string
                address:
                  type: string
                state:
                  type: string
                city:
                  type: string
                country:
                  type: string
                zipCode:
                  type: string
                coordinates:
                  type: array
                  items:
                    type: number
      responses:
        '200':
          description: Hotel created successfully
        '500':
          description: Failed to create hotel
  /hotel/{hotelId}:
    get:
      summary: Get details of a specific hotel
      tags:
        - Hotel
      parameters:
        - name: hotelId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel details found
        '404':
          description: Hotel not found
    delete:
      summary: Delete a specific hotel
      tags:
        - Hotel
      parameters:
        - name: hotelId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel deleted successfully
        '404':
          description: Hotel not found
  /hotel/{id}:
    delete:
      summary: Delete a hotel by ID
      tags:
        - Hotel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel deleted successfully
        '404':
          description: Hotel not found
  /hotel/{hotelId}/add-primary-image:
    post:
      summary: Add a primary image to a hotel
      tags:
        - Hotel
      parameters:
        - name: hotelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Primary image added successfully
        '400':
          description: No file uploaded
  # Room Routes
  /room:
    get:
      summary: Get all rooms
      tags:
        - Room
      parameters:
        - name: hotelId
          in: query
          schema:
            type: string
        - name: roomId
          in: query
          schema:
            type: string
        - name: roomNumber
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: minPrice
          in: query
          schema:
            type: number
        - name: maxPrice
          in: query
          schema:
            type: number
        - name: isAvailable
          in: query
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of rooms
  /room/add-room:
    post:
      summary: Add a new room
      tags:
        - Room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotelId:
                  type: string
                roomNumber:
                  type: string
                type:
                  type: string
                pricePerNight:
                  type: number
                maxAdults:
                  type: integer
                maxChildren:
                  type: integer
      responses:
        '200':
          description: Room added successfully
        '403':
          description: Not authorized to add rooms
  /room/add-multiple-room:
    post:
      summary: Add multiple rooms
      tags:
        - Room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rooms:
                  type: array
                  items:
                    type: object
                    properties:
                      hotelId:
                        type: string
                      roomNumber:
                        type: string
                      type:
                        type: string
                      pricePerNight:
                        type: number
                      maxAdults:
                        type: integer
                      maxChildren:
                        type: integer
      responses:
        '200':
          description: Rooms added successfully
        '400':
          description: Invalid room data
  /room/delete-room/{roomId}:
    delete:
      summary: Delete a specific room
      tags:
        - Room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room deleted successfully
        '404':
          description: Room not found
  /room/delete-multiple-rooms:
    delete:
      summary: Delete multiple rooms
      tags:
        - Room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Rooms deleted successfully
        '404':
          description: Rooms not found
  /room/upload-image:
    post:
      summary: Upload an image for a room
      tags:
        - Room
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Room image uploaded successfully
        '400':
          description: No file uploaded
  # Booking Routes
  /booking/book-room:
    post:
      summary: Create a new booking
      tags:
        - Booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotelIds:
                  type: array
                  items:
                    type: string
                roomIds:
                  type: array
                  items:
                    type: string
                adults:
                  type: integer
                children:
                  type: integer
                specialRequests:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                checkIn:
                  type: string
                  format: date
                checkOut:
                  type: string
                  format: date
      responses:
        '201':
          description: Booking created successfully
        '400':
          description: Invalid booking data
  /booking/reservations:
    get:
      summary: Get all bookings
      tags:
        - Booking
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: checkInStatus
          in: query
          schema:
            type: string
        - name: hotelIds
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of bookings
        '404':
          description: No bookings found
  /booking/check-in/{bookingId}:
    patch:
      summary: Check-in for a booking
      tags:
        - Booking
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Guest checked in successfully
        '404':
          description: Booking not found
  /booking/check-out/{bookingId}:
    patch:
      summary: Check-out for a booking
      tags:
        - Booking
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Guest checked out successfully
        '404':
          description: Booking not found
  # Payment Routes
  /pay:
    post:
      summary: Process a payment
      tags:
        - Payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingId:
                  type: string
                amount:
                  type: number
                paymentMethod:
                  type: string
      responses:
        '200':
          description: Payment successful
        '400':
          description: Payment failed
